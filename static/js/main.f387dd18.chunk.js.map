{"version":3,"sources":["components/Buttons.tsx/Buttons/Button.jsx","App.jsx","reportWebVitals.js","index.js","components/Buttons.tsx/Calculator/Calculator.jsx","styles/Calculator.js"],"names":["Button","label","onClick","className","App","Calculator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","operators","useState","display","setDisplay","lastInput","slice","lastInputWasOperator","includes","values","split","lastDigits","length","handleClick","e","target","innerText","handleClickOperator","clear","deleteLast","calculate","eval","toString","error","console","log","percentage","parseFloat","join","decimalSeperator","zeroCheck","StyledCalculator","styled","div"],"mappings":"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","file":"static/js/main.f387dd18.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = ({ label, onClick, className }) => {\n  return (\n    <button onClick={onClick} className={className}>\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import \"./App.css\";\nimport Calculator from \"./components/Buttons.tsx/Calculator/Calculator\";\n\nfunction App() {\n  return <Calculator />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\nimport { StyledCalculator } from \"../../../styles/Calculator\";\nimport { useState } from \"react\";\nimport Button from \"../Buttons/Button\";\n\n// TO-DO first input can only be - operator, no other operator\n\nconst operators = [\"/\", \"*\", \"-\", \"+\"];\n\nconst Calculator = () => {\n  const [display, setDisplay] = useState(\"\");\n\n  const lastInput = display.slice(-1);\n  const lastInputWasOperator = operators.includes(lastInput);\n\n  const values = display.split(/([/*+-])/);\n  let lastDigits = values[values.length - 1];\n\n  const handleClick = (e) => {\n    setDisplay(display + e.target.innerText);\n  };\n  const handleClickOperator = (e) => {\n    !lastInputWasOperator && setDisplay(display + e.target.innerText);\n  };\n  const clear = () => {\n    setDisplay(\"\");\n  };\n  const deleteLast = () => {\n    setDisplay(display.slice(0, -1));\n  };\n  const calculate = () => {\n    try {\n      setDisplay(eval(display).toString());\n    } catch (error) {\n      console.log(\"Not a valid operation!\");\n    }\n  };\n  const percentage = () => {\n    if (!lastInputWasOperator) {\n      values[values.length - 1] = parseFloat(lastDigits) / 100;\n      setDisplay(values.join(\"\"));\n    }\n  };\n  const decimalSeperator = (e) => {\n    if (!lastDigits.includes(\".\")) {\n      setDisplay(display + e.target.innerText);\n    }\n  };\n  const zeroCheck = (e) => {\n    if (lastDigits[0] !== \"0\" || lastDigits.includes(\".\")) {\n      setDisplay(display + e.target.innerText);\n    }\n  };\n\n  return (\n    <StyledCalculator>\n      <div className=\"display\">{display === \"\" ? 0 : display}</div>\n      <Button label={\"C\"} onClick={clear} />\n      <Button label={\"â¬…\"} onClick={deleteLast} />\n      <Button label={\"%\"} onClick={percentage} />\n      <Button label={\"/\"} onClick={handleClickOperator} />\n      <Button label={\"7\"} onClick={handleClick} />\n      <Button label={\"8\"} onClick={handleClick} />\n      <Button label={\"9\"} onClick={handleClick} />\n      <Button label={\"*\"} onClick={handleClickOperator} />\n      <Button label={\"4\"} onClick={handleClick} />\n      <Button label={\"5\"} onClick={handleClick} />\n      <Button label={\"6\"} onClick={handleClick} />\n      <Button label={\"-\"} onClick={handleClickOperator} />\n      <Button label={\"1\"} onClick={handleClick} />\n      <Button label={\"2\"} onClick={handleClick} />\n      <Button label={\"3\"} onClick={handleClick} />\n      <Button label={\"+\"} onClick={handleClickOperator} />\n      <Button label={\"0\"} onClick={zeroCheck} className=\"span-two\" />\n      <Button label={\".\"} onClick={decimalSeperator} />\n      <Button label={\"=\"} onClick={calculate} />\n    </StyledCalculator>\n  );\n};\n\nexport default Calculator;\n","import styled from \"styled-components\";\n\nexport const StyledCalculator = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 5rem);\n  grid-template-rows: minmax(5rem, auto) repeat(5, 5rem);\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0 0.5rem 0.5rem 0.5rem;\n  border-radius: 15px;\n  background: rgba(248, 245, 245, 0.1);\n  backdrop-filter: blur(0.5px);\n  -webkit-backdrop-filter: blur(0.5px);\n\n  .display {\n    font-size: 3rem;\n    grid-column: 1 / -1;\n    /* grid-column: span 4; */\n    padding: 1.5rem;\n    text-align: right;\n    align-self: center;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n\n  .span-two {\n    grid-column: span 2;\n  }\n\n  button {\n    color: white;\n    font-size: 1rem;\n    background: unset;\n    border: unset;\n    cursor: pointer;\n    outline: none;\n    /* border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n  border-right: 1px solid rgba(255, 255, 255, 0.05); */\n  }\n\n  button:hover {\n    /* transition: ease-in-out 0.1s; */\n    background: rgba(240, 238, 238, 0.1);\n    border-radius: 15px;\n  }\n\n  button:active {\n    background: unset;\n    /* background: rgba(229, 173, 173, 0.1); */\n    /* color: #192f00; */\n    transform: scale(1.2);\n    color: whitesmoke;\n    font-weight: 500;\n  }\n`;\n"],"sourceRoot":""}